# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'rbconfig'
IS_WINDOWS = (RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/) ? true : false

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "precise32"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://files.vagrantup.com/precise32.box"

  # This can be set to the host name you wish the guest machine to have.
  config.vm.hostname = "blogga-dev-box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:3000" will access port 3000 on the guest machine.
  config.vm.network :forwarded_port, guest: 3000, host: 3000

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "10.0.0.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network
  
  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  #config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../", "/home/vagrant/blogga", :nfs => !IS_WINDOWS

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  config.vm.provider :virtualbox do |vb|
    # Don't boot with headless mode
    # vb.gui = true
  
    # Use VBoxManage to customize the VM. For example, to change memory and 
    # allow symlinks to be created in the shared folder (ex: node_modules):
    vb.customize ["modifyvm", :id, "--memory", "512"]
	#vb.customize ["modifyvm", :id, "--cpus", "2"]
	#vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/blogga", "1"]
  end
  # View the documentation for the provider you're using for more
  # information on available options.

  # Requires vagrant-vbguest plugin
  #
  # set auto_update to false, if you do NOT want to check the correct  
  # VirtualBox guest additions version when booting this machine
  config.vbguest.auto_update = true 
  
  # Provisioning with shell to make things simpler
  config.vm.provision :shell,
    :inline => "sudo apt-get update && sudo apt-get -y install build-essential curl git ruby1.9.3 python-software-properties python libdjvulibre-dev libjpeg-dev libtiff-dev libwmf-dev libmagickcore-dev libmagickwand-dev libmagick++-dev && sudo add-apt-repository ppa:chris-lea/node.js && sudo apt-get update && sudo apt-get -y install nodejs && sudo gem install bundler github-pages rmagick --no-ri --no-rdoc && (cd /home/vagrant/blogga; sudo bundle install; sudo npm install)"
end